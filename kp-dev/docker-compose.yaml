volumes:
  pg_data:
  openldap_data:

services:
  database:
    image: postgres:15.6-alpine
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - ./database/gen/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      timeout: 3s
      interval: 60s
      start_interval: 3s
      start_period: 60s

  traefik:
    image: traefik:v3.3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "${TRAEFIK_PORT}:80"
      - "${TRAEFIK_DASHBOARD_PORT}:8080"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:${TRAEFIK_PORT}"
      - "--providers.docker.constraints=Label(`traefik.instance`, `${TRAEFIK_INSTANCE}`)"

  liferay:
    image: liferay/portal:7.0.6-ga7
    volumes:
      # Copy a .war here to deploy it.
      - ./volumes/deploy:/mnt/liferay/deploy
      - ./liferay/portal-ext.properties:/opt/liferay/portal-ext.properties
    environment:
      LIFERAY_JDBC_PERIOD_DEFAULT_PERIOD_URL: "jdbc:postgresql://database:5432/${POSTGRES_DB_LIFERAY}"
      LIFERAY_JDBC_PERIOD_DEFAULT_PERIOD_USERNAME: "${POSTGRES_USER_LIFERAY}"
      LIFERAY_JDBC_PERIOD_DEFAULT_PERIOD_PASSWORD: "${POSTGRES_PASSWORD_LIFERAY}"
    depends_on:
      database:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.instance=kp"
      - "traefik.http.routers.liferay.rule=Host(`${HOSTNAME}`)"
      - "traefik.http.routers.liferay.entrypoints=web"
      - "traefik.http.services.liferay.loadbalancer.server.port=8080"

  django:
    build: ../django/
    environment:
      POSTGRES_USER: "${POSTGRES_USER_DJANGO}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD_DJANGO}"
      POSTGRES_DB: "${POSTGRES_DB_DJANGO}"
      DB_HOST: database
      SECRET_KEY: "${SECRET_KEY}"
      ALLOWED_HOSTS: "${HOSTNAME}"
      DEBUG: "${DEBUG}"
      LDAP_PASSWORD: "${LDAP_PASSWORD}"
      LDAP_URI: ldap://openldap:1389
      LDAP_USER: "${LDAP_USER}"
      LDAP_ROOT: "${LDAP_ROOT}"
      CHALLENGE_URL: "${CHALLENGE_URL}"
      GROUP_USER: "${DJANGO_GROUP_USER}"
      GROUP_ADMIN: "${DJANGO_GROUP_ADMIN}"
      SCRIPT_NAME: /kp
    volumes:
      - ./volumes/media:/media
    depends_on:
      database:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.instance=kp"
      - "traefik.http.routers.django.rule=Host(`${HOSTNAME}`) && PathPrefix(`${BACKEND_PREFIX}/`)"
      - "traefik.http.routers.django.entrypoints=web"

  react:
    build:
      context: ../react/
      target: dev
    command: yarn dev
    environment:
      VITE_BACKEND_PREFIX: "${BACKEND_PREFIX}"
      VITE_LIFERAY_EMBED: false
      VITE_EMAIL: "${VITE_EMAIL}"
      VITE_PAUTH: "${VITE_PAUTH}"
    volumes:
      - ../react:/app
    labels:
      - "traefik.enable=true"
      - "traefik.instance=kp"
      - "traefik.http.routers.vite.rule=Host(`${HOSTNAME}`) && PathPrefix(`${FRONTEND_PREFIX}/`)"
      - "traefik.http.routers.vite.entrypoints=web"

  openldap:
    image: bitnami/openldap:2.6.9
    environment:
      LDAP_ROOT: "${LDAP_ROOT}"
      LDAP_USERS: "${LDAP_USER}"
      LDAP_PASSWORDS: "${LDAP_PASSWORD}"
    volumes:
      - openldap_data:/bitnami/openldap
