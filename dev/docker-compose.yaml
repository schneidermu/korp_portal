volumes:
  data:
  static:

services:
  database:
    image: postgres:13.16-alpine
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - ./database/gen/init.sql:/docker-entrypoint-initdb.d/init.sql
      - data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      timeout: 3s
      interval: 60s
      start_interval: 3s
      start_period: 60s

  liferay:
    image: liferay/portal:7.0.6-ga7
    ports:
      - 8080:8080
    volumes:
      # Copy a .war here to deploy it.
      - ./volumes/deploy:/mnt/liferay/deploy
      - ./liferay/portal-ext.properties:/opt/liferay/portal-ext.properties
    environment:
      LIFERAY_JDBC_PERIOD_DEFAULT_PERIOD_URL: "jdbc:postgresql://database:5432/${POSTGRES_DB_LIFERAY}"
      LIFERAY_JDBC_PERIOD_DEFAULT_PERIOD_USERNAME: "${POSTGRES_USER_LIFERAY}"
      LIFERAY_JDBC_PERIOD_DEFAULT_PERIOD_PASSWORD: "${POSTGRES_PASSWORD_LIFERAY}"
    depends_on:
      database:
        condition: service_healthy

  django:
    build: ../django/
    command: >
      sh -c "python manage.py makemigrations &&
        python manage.py migrate --noinput &&
        python manage.py collectstatic --noinput &&
        gunicorn --bind 0.0.0.0:8000 korp_portal.wsgi"
    environment:
      POSTGRES_USER: "${POSTGRES_USER_DJANGO}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD_DJANGO}"
      POSTGRES_DB: "${POSTGRES_DB_DJANGO}"
      DB_HOST: database
      SECRET_KEY: "${SECRET_KEY}"
      ALLOWED_HOSTS: "${ALLOWED_HOSTS}"
      ALLOWED_ORIGINS: "${ALLOWED_ORIGINS}"
      DEBUG: "${DEBUG}"
    volumes:
      - static:/app/collected_static
      - ./volumes/media:/media
    depends_on:
      database:
        condition: service_healthy

  gateway:
    image: nginx:1.22.1-alpine
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static:/static
      - ./volumes/media:/media
    ports:
      - "${DJANGO_PORT}:80"
    depends_on:
      - django
