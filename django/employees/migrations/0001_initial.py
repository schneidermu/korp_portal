# Generated by Django 4.2.18 on 2025-02-22 09:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Имя')),
                ('surname', models.CharField(blank=True, max_length=256, null=True, verbose_name='Фамилия')),
                ('patronym', models.CharField(blank=True, max_length=256, null=True, verbose_name='Отчество')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Почта')),
                ('telephone_number', models.CharField(blank=True, null=True, verbose_name='Номер телефона')),
                ('agreed_with_data_processing', models.BooleanField(default=False, verbose_name='Согласен на обработку персональных данных')),
                ('inner_telephone_number', models.CharField(blank=True, null=True, verbose_name='Внутренний номер телефона')),
                ('office', models.CharField(blank=True, null=True, verbose_name='Кабинет')),
                ('job_title', models.CharField(blank=True, max_length=256, null=True, verbose_name='Должность')),
                ('class_rank', models.CharField(blank=True, max_length=256, null=True, verbose_name='Классный чин')),
                ('status', models.CharField(blank=True, choices=[('На рабочем месте', 'На рабочем месте'), ('В отпуске', 'В отпуске'), ('В командировке', 'В командировке'), ('На больничном', 'На больничном'), ('Нет на месте', 'Нет на месте')], default='На рабочем месте', max_length=16, null=True, verbose_name='Статус')),
                ('avatar', models.CharField(blank=True, default=None, null=True, verbose_name='Аватар')),
                ('chief', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to=settings.AUTH_USER_MODEL, verbose_name='Начальник')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'запись о сотруднике',
                'verbose_name_plural': 'Записи сотрудников',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Characteristic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.CharField(blank=True, verbose_name='Стаж работы')),
                ('about', models.TextField(blank=True, verbose_name='Обо мне')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='characteristic', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись характеристики',
                'verbose_name_plural': 'Записи характеристик',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('address', models.CharField(max_length=256, verbose_name='Адрес организации')),
            ],
            options={
                'verbose_name': 'запись организации',
                'verbose_name_plural': 'записи организаций',
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('file', models.CharField(blank=True, default=None, verbose_name='Документ')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись волонтерства',
                'verbose_name_plural': 'записи волонтерств',
            },
        ),
        migrations.CreateModel(
            name='Victory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('file', models.CharField(blank=True, default=None, verbose_name='Документ')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись победы в конкурсе',
                'verbose_name_plural': 'записи побед в конкурсе',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('file', models.CharField(blank=True, default=None, verbose_name='Документ')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='Год окончания университета')),
                ('month', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Месяц окончания университета')),
                ('faculty', models.CharField(blank=True, verbose_name='Факультет')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись университета',
                'verbose_name_plural': 'записи университетов',
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('file', models.CharField(blank=True, default=None, verbose_name='Документ')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись повышения квалификации',
                'verbose_name_plural': 'записи повышений квалификации',
            },
        ),
        migrations.CreateModel(
            name='StructuralSubdivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='structural_subdivisions', to='employees.organization', verbose_name='Организация')),
                ('parent_structural_subdivision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='controlled_structural_subdivision', to='employees.structuralsubdivision', verbose_name='Родительское СП')),
            ],
            options={
                'verbose_name': 'запись структурного подразделения',
                'verbose_name_plural': 'записи структурных подразделений',
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('file', models.CharField(blank=True, default=None, verbose_name='Документ')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись спортивного мероприятия',
                'verbose_name_plural': 'записи спортивных мероприятий',
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('file', models.CharField(blank=True, default=None, verbose_name='Документ')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись награды',
                'verbose_name_plural': 'записи наград',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rated', to=settings.AUTH_USER_MODEL, verbose_name='Кого оценивают')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rates', to=settings.AUTH_USER_MODEL, verbose_name='Кто оценивает')),
            ],
            options={
                'verbose_name': 'запись оценки',
                'verbose_name_plural': 'Записи оценок',
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('file', models.CharField(blank=True, default=None, verbose_name='Документ')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись выступления',
                'verbose_name_plural': 'записи выступлений',
            },
        ),
        migrations.CreateModel(
            name='Hobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('file', models.CharField(blank=True, default=None, verbose_name='Документ')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись хобби',
                'verbose_name_plural': 'записи хобби',
            },
        ),
        migrations.CreateModel(
            name='Diploma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('file', models.CharField(blank=True, default=None, verbose_name='Документ')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='Год получения диплома')),
                ('month', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Месяц получения диплома')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись диплома',
                'verbose_name_plural': 'записи дипломов',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('file', models.CharField(blank=True, default=None, verbose_name='Документ')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='Год прохождения курса')),
                ('month', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Месяц прохождения курса')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись курса',
                'verbose_name_plural': 'Записи курсов',
            },
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('file', models.CharField(blank=True, default=None, verbose_name='Документ')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись конференции',
                'verbose_name_plural': 'записи конференций',
            },
        ),
        migrations.CreateModel(
            name='Competence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'запись компетенции',
                'verbose_name_plural': 'записи компетенций',
            },
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_start', models.IntegerField(default=1970, verbose_name='Год вступления в должность')),
                ('month_start', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Месяц вступления в должность')),
                ('year_finish', models.IntegerField(blank=True, null=True, verbose_name='Год ухода из должности')),
                ('month_finish', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Месяц ухода из должности')),
                ('name', models.CharField(max_length=256, verbose_name='Должность')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='employees.characteristic', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'карьера',
                'verbose_name_plural': 'Карьера',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='structural_division',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='positions', to='employees.structuralsubdivision', verbose_name='Структурное подразделение'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
